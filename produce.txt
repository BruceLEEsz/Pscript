S' -> <pro>
<pro> -> <announceList>|<pro> <fun>
<announceList> -> <announce>|<announceList> <announce>
<announce> -> import < <identifier> > ;
<fun> -> <keyword> <identifier> <param> <block>
<keyword> -> void|int|char|float|double|def
<identifier> -> id
<param> -> ( <type> <identifier> )
<type> -> int|float|double|char|var
<block> -> { <statementList> }|{ }
<block> -> { <announceList> <statementList> }|{ }
<announceList> -> <type> <identifier> ;|<type> <EQUAL>
<statementList> -> <statement>|<statementList> <statement>
<statement> -> <IF>|<EQUAL>|<WHILE>
<EQUAL> -> id = <exp> ;
<WHILE> -> while <b> do { <statementList> } ;
<IF> -> <S1>|<S2>
<S1> -> if <b> { <statementList> } else { <statementList> }
<S2> -> if <b> { <statementList> }
<b> -> ( <LOGICexp> )
<LOGICexp> -> <identifier> <LOGICop> <identifier>
<LOGICop> -> >=|<=|<|!|==|!=|>
<exp> -> <exp> + T|T|<exp> - T
T -> F * F|F / F|F
F -> <identifier>|( <exp> )

